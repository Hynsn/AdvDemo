apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

apply plugin: 'com.uber.okbuck'

android {
    compileSdkVersion rootProject.ext.droid["compileSdk"]
    defaultConfig {
        applicationId "com.example.myapplication"
        minSdkVersion rootProject.ext.droid["minSdk"]
        targetSdkVersion rootProject.ext.droid["targetSdk"]
        versionCode rootProject.ext.droid["Code"]
        versionName rootProject.ext.droid["Name"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
                abiFilters "arm64-v8a", "armeabi-v7a"
            }
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }
    buildFeatures{
        dataBinding = true
        // for view binding :
        // viewBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}
repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'])
    implementation project(path: ':base')
    def room_version = rootProject.ext.ver["room"]
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"
    implementation "androidx.legacy:legacy-support-v4:${rootProject.ext.ver["legacy"]}"

    implementation "androidx.appcompat:appcompat:${rootProject.ext.ver["appcompat"]}"
    implementation "androidx.constraintlayout:constraintlayout:${rootProject.ext.ver["constraintlayout"]}"
    testImplementation "junit:junit:${rootProject.ext.ver["junit"]}"
    androidTestImplementation "androidx.test:runner:${rootProject.ext.ver["runner"]}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${rootProject.ext.ver["espresso"]}"
    implementation "com.google.android.material:material:${rootProject.ext.ver["material"]}"
    implementation "androidx.fragment:fragment-ktx:${rootProject.ext.ver["fragment"]}"

    def lifecycle_ver = rootProject.ext.ver["lifecycle"]
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_ver"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_ver"

    // 升级版本解决闪烁问题，2.3.1修复
    def navi_version = rootProject.ext.ver["navi"]

    implementation "androidx.navigation:navigation-fragment:$navi_version"
    implementation "androidx.navigation:navigation-ui:$navi_version"

    implementation "org.nanohttpd:nanohttpd:${rootProject.ext.ver["nanohttpd"]}"

    //debugImplementation 'com.huya.mobile:Uinspector:1.0.10'

    // kt
    def kt_coroutines = rootProject.ext.ver["kt-coroutines"]
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kt_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kt_coroutines"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:${rootProject.ext.ver["quickadapter"]}"

    implementation "com.google.code.gson:gson:${rootProject.ext.ver["gson"]}"


}

tasks.whenTaskAdded { task ->
    if (task.name.contains("lint") || task.name.contains("lintVitalRelease")) {
        println("lint#lintVitalRelease")
        //task.enabled = false
    }
}